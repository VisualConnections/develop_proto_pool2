"use strict";function getUrlVars(){for(var hash,vars=[],hashes=window.location.href.slice(window.location.href.indexOf("?")+1).split("&"),i=0;i<hashes.length;i++)hash=hashes[i].split("="),vars.push(hash[0]),vars[hash[0]]=hash[1];return vars}var ApplicationConfiguration=function(){var applicationModuleName="FBOpen",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("cards"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cards",["users"]),angular.module("cards").config(["$stateProvider",function($stateProvider){$stateProvider.state("mainCards",{url:"/cards?searchTermAll",templateUrl:"modules/cards/views/cards.client.view.html"}).state("detailedCard",{url:"/cards/detail?sourceId&recordId&searchTerm",templateUrl:"modules/cards/views/detailed.card.client.view.html"}).state("dailyMedCards",{url:"/cards/daily/:searchTerm",templateUrl:"modules/cards/views/daily.cards.client.view.html"}).state("medPlusConnect",{url:"/cards/medplusconnect/:searchTerm",templateUrl:"modules/cards/views/medplusconnect.cards.client.view.html"}).state("medPlus",{url:"/cards/medplus/:searchTerm",templateUrl:"modules/cards/views/medplus.cards.client.view.html"}).state("trials",{url:"/cards/trials/:searchTerm",templateUrl:"modules/cards/views/trials.cards.client.view.html"}).state("pubmed",{url:"/cards/pubmed/:searchTerm",templateUrl:"modules/cards/views/pubmed.cards.client.view.html"}).state("digitalCollections",{url:"/cards/digital/:searchTerm",templateUrl:"modules/cards/views/digital.cards.client.view.html"})}]),angular.module("cards").controller("CardsController",["$scope","$rootScope","$stateParams","$q","CardsFactory","$location","UserPreferences",function($scope,$rootScope,$stateParams,$q,CardsFactory,$location,UserPreferences){function getCardsFromAPIs(page){var apiResults=[],searchTerm="";if($scope.showPreLoader=!0,$scope.showLoadMoreButton=!1,$rootScope.searchTermAll)searchTerm='"'+$rootScope.searchTermAll+'"',$scope.showSearchType=!0;else{$scope.showSearchType=!1;for(var i=0;i<$rootScope.userPreferences.searchTerms.length;i++)searchTerm+='"'+$rootScope.userPreferences.searchTerms[i]+'" OR ';searchTerm=searchTerm.substring(0,searchTerm.length-4)}console.log(searchTerm);for(var i=0;i<$rootScope.userPreferences.sources.length;i++)if($rootScope.userPreferences.sources[i].chosen||$rootScope.searchTermAll){var sourceId=$rootScope.userPreferences.sources[i].id,sourceName=$rootScope.userPreferences.sources[i].name;if("medlinePlusConnect"!=sourceId||1!=page||$rootScope.searchTermAll)if("dailyMed"==sourceId){var preventEmptyResponseSearchTerm=searchTerm;preventEmptyResponseSearchTerm+=' OR "741AE689-9A31-2CAB-5A68-4BA650BE4EFB"',apiResults.push(CardsFactory.getCardRecords(sourceId,sourceName,preventEmptyResponseSearchTerm,currentPage))}else apiResults.push(CardsFactory.getCardRecords(sourceId,sourceName,searchTerm,page));else for(var j=0;j<$rootScope.userPreferences.searchTerms.length;j++)apiResults.push(CardsFactory.getCardRecords(sourceId,sourceName,$rootScope.userPreferences.searchTerms[j],currentPage))}$q.all(apiResults).then(function(results){var mixedCardsCollection=[];console.log("processing all results");for(var i=0;i<results.length;i++)addCardsToMixedCardCollection(mixedCardsCollection,results[i]);mixedCardsCollection=shuffleCards(mixedCardsCollection);for(var i=0;i<mixedCardsCollection.length;i++);outputMixedCards(mixedCardsCollection)}).catch(function(){console.log("$q.all - processing of card APIs failed: "),outputMixedCards([]),alert(currentPage>1?"No more results found":"No results found based on your search")})}function getInitialCards(){$rootScope.columns&&$rootScope.columns.length>0?($scope.columns=$rootScope.columns,$(window).scrollTop($rootScope.cardsScrollPos?$rootScope.cardsScrollPos:0),currentPage=$rootScope.cardsCurrentPage?$rootScope.cardsCurrentPage:1,$scope.showLoadMoreButton=!$rootScope.hideLoadMoreButton,$scope.showSearchType=$rootScope.searchTermAll?!0:!1):getCardsFromAPIs(1)}function addCardsToMixedCardCollection(mixedCardsCollection,results){switch(results.config.data.sourceId){case"dailyMed":addDailyMedCardsToMixedCardCollection(mixedCardsCollection,results);break;case"medlinePlusConnect":addMedlinePlusConnectCardsToMixedCardCollection(mixedCardsCollection,results);break;case"medlinePlusHealthTopics":addMedlinePlusHealthTopicsCardsToMixedCardCollection(mixedCardsCollection,results);break;case"pubMed":addPubMedCardsToMixedCardCollection(mixedCardsCollection,results);break;case"digitalCollections":addDigitalCollectionsToMixedCardCollection(mixedCardsCollection,results);break;case"clinicalTrials":addClinicalTrialsToMixedCardCollection(mixedCardsCollection,results)}}function addDailyMedCardsToMixedCardCollection(mixedCardsCollection,results){for(var data=results.data,processedRecords=[],fullTitle="",fullDescription="",i=0;i<data.results.length;i++)data.results[i].openfda.spl_set_id&&processedRecords.push(data.results[i]);for(var i=0;i<processedRecords.length;i++)fullTitle="",fullDescription="",processedRecords[i].openfda.brand_name&&(fullTitle=processedRecords[i].openfda.brand_name.toString()+" "),processedRecords[i].openfda.generic_name&&processedRecords[i].openfda.generic_name.toString().toLowerCase()!=processedRecords[i].openfda.brand_name.toString().toLowerCase()&&(fullTitle+="("+processedRecords[i].openfda.generic_name+") "),processedRecords[i].openfda.manufacturer_name&&(fullTitle+="["+processedRecords[i].openfda.manufacturer_name.toString()+"]"),processedRecords[i].indications_and_usage&&"INDICATIONS AND USAGE:"!=processedRecords[i].indications_and_usage.toString().toLowerCase()&&(fullDescription=processedRecords[i].indications_and_usage.toString()),0==fullDescription.length&&processedRecords[i].description&&(fullDescription=processedRecords[i].description.toString()),mixedCardsCollection.push({id:processedRecords[i].openfda.spl_set_id.toString(),sourceId:results.config.data.sourceId,sourceName:results.config.data.sourceName,title:fullTitle,description:shortenText(fullDescription)})}function addMedlinePlusConnectCardsToMixedCardCollection(mixedCardsCollection,results){for(var data=results.data,i=0;i<data.feed.entry.length;i++)mixedCardsCollection.push({id:data.feed.entry[i].id._value,sourceId:results.config.data.sourceId,searchTerm:results.config.data.searchTerm,sourceName:results.config.data.sourceName,title:removeHTMLTags(data.feed.entry[i].title._value),description:shortenText(removeHTMLTags(data.feed.entry[i].summary._value))})}function addMedlinePlusHealthTopicsCardsToMixedCardCollection(mixedCardsCollection,results){var data=results.data;if(data.nlmSearchResult.list)for(var i=0;i<data.nlmSearchResult.list[0].document.length;i++){for(var snippet="",j=0;j<data.nlmSearchResult.list[0].document[i].content.length;j++)"FullSummary"==data.nlmSearchResult.list[0].document[i].content[j].$.name&&(snippet=data.nlmSearchResult.list[0].document[i].content[j]._);mixedCardsCollection.push({id:data.nlmSearchResult.list[0].document[i].$.url,sourceId:results.config.data.sourceId,sourceName:results.config.data.sourceName,title:removeHTMLTags(data.nlmSearchResult.list[0].document[i].content[0]._),description:shortenText(removeHTMLTags(snippet))})}}function addPubMedCardsToMixedCardCollection(mixedCardsCollection,results){var data=results.data;if(data.eSearchResult.IdList)for(var i=0;i<data.eSearchResult.IdList[0].Id.length;i++){var id=data.eSearchResult.IdList[0].Id[i].toString();mixedCardsCollection.push({id:id,sourceId:results.config.data.sourceId,sourceName:results.config.data.sourceName,title:"",description:""}),getPubmedDetails(id,mixedCardsCollection[mixedCardsCollection.length-1],results)}}function getPubmedDetails(id,collectionItem,results){CardsFactory.getDetailedCardRecord(results.config.data.sourceId,id).success(function(record){var articleTitle=record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].ArticleTitle[0].toString(),abstract="";try{record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].Abstract&&(abstract=record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].Abstract[0].AbstractText[0]._?record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].Abstract[0].AbstractText[0]._.toString():record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].Abstract[0].AbstractText[0].toString())}catch(e){}collectionItem.title=articleTitle,collectionItem.description=shortenText(abstract)}).error(function(){console.log("an error occured getting a single pubmed record")})}function addDigitalCollectionsToMixedCardCollection(mixedCardsCollection,results){var data=results.data;if(data.nlmSearchResult.list)for(var i=0;i<data.nlmSearchResult.list[0].document.length;i++){for(var snippet="",j=0;j<data.nlmSearchResult.list[0].document[i].content.length;j++)"dc:description"==data.nlmSearchResult.list[0].document[i].content[j].$.name?snippet=data.nlmSearchResult.list[0].document[i].content[j]._:"snippet"==data.nlmSearchResult.list[0].document[i].content[j].$.name&&(snippet=data.nlmSearchResult.list[0].document[i].content[j]._);mixedCardsCollection.push({id:data.nlmSearchResult.list[0].document[i].$.url,sourceId:results.config.data.sourceId,sourceName:results.config.data.sourceName,title:shortenText(removeHTMLTags(data.nlmSearchResult.list[0].document[i].content[0]._)),description:shortenText(removeHTMLTags(snippet))})}}function addClinicalTrialsToMixedCardCollection(mixedCardsCollection,results){var data=results.data;if(!data.search_results.clinical_study)return!1;for(var i=0;i<data.search_results.clinical_study.length;i++)mixedCardsCollection.push({id:data.search_results.clinical_study[i].nct_id[0].toString(),sourceId:results.config.data.sourceId,sourceName:results.config.data.sourceName,title:removeHTMLTags(data.search_results.clinical_study[i].title[0].toString()),description:shortenText(removeHTMLTags(data.search_results.clinical_study[i].condition_summary[0].toString()))})}function shuffleCards(array){for(var temporaryValue,randomIndex,currentIndex=array.length;0!==currentIndex;)randomIndex=Math.floor(Math.random()*currentIndex),currentIndex-=1,temporaryValue=array[currentIndex],array[currentIndex]=array[randomIndex],array[randomIndex]=temporaryValue;return array}function outputMixedCards(mixedCardsCollection){var totalRecords=mixedCardsCollection.length,columns=[{collection:[]},{collection:[]},{collection:[]}];$scope.columns||($scope.columns=columns);for(var currentColumnIndex=nextColumnIndexToReceiveCard,i=0;totalRecords>i;i++)$scope.columns[currentColumnIndex].collection.push(mixedCardsCollection[i]),currentColumnIndex++,3==currentColumnIndex&&(currentColumnIndex=0),nextColumnIndexToReceiveCard=currentColumnIndex;$scope.showPreLoader=!1,mixedCardsCollection.length>0?($scope.showLoadMoreButton=!0,$rootScope.hideLoadMoreButton=!1):($scope.showLoadMoreButton=!1,$rootScope.hideLoadMoreButton=!0),$rootScope.columns=$scope.columns,$rootScope.cardsCurrentPage=currentPage,console.log("current page: "+currentPage),console.log("next column to received card: "+nextColumnIndexToReceiveCard),console.log(""+$scope.columns[0].collection.length+"|"+ +$scope.columns[1].collection.length+"|"+ +$scope.columns[2].collection.length)}function removeHTMLTags(s){var rex=/(<([^>]+)>)/gi;return s.replace(rex,"")}function shortenText(s){return s.length>300&&(s=s.substring(0,300)+"..."),s}var currentPage=1,nextColumnIndexToReceiveCard=0;$rootScope.userPreferences||($rootScope.userPreferences=UserPreferences.getUserPreferences()),getInitialCards(),$scope.moveNext=function(){currentPage++,getCardsFromAPIs(currentPage)},$(window).on("scroll",function(){$scope.okSaveScroll&&($rootScope.cardsScrollPos=parseInt($(window).scrollTop()))}),$rootScope.$on("$stateChangeStart",function(){$scope.okSaveScroll=!1}),$scope.$on("$stateChangeSuccess",function(){$scope.okSaveScroll=!0}),$scope.searchAll=function(term){$rootScope.columns=void 0,$rootScope.searchTermAll=term,$rootScope.columns=void 0,$scope.columns=void 0,getCardsFromAPIs(1)},$scope.searchBasedOnPreferences=function(){$scope.searchAllTerm="",$rootScope.columns=void 0,$rootScope.searchTermAll=void 0,$scope.columns=void 0,currentPage=1,getCardsFromAPIs(1)},$(document).ready(function(){$(".search-reset").hide(),$(".search-input").keyup(function(){0!=$(this).val().length?$(".search-reset").show():$(".search-reset").hide()}),$(".search-input").keydown(function(e){if(27==e.keyCode&&($(this).val(""),$(".search-reset").hide()),13==e.keyCode){var searchInput=$(".search-input").val();""!=searchInput&&$(".search_submit").trigger("click")}}),$(".search-reset").click(function(){$(".search-reset").hide(),$(".search-input").val("")}),$(document.body).on("click",".dropdown-menu li",function(event){var $target=$(event.currentTarget);return $target.closest(".btn-group").find('[data-bind="label"]').text($target.text()).end().children(".dropdown-toggle").dropdown("toggle"),!1})})}]),angular.module("cards").controller("DailyCardsController",["$scope","$stateParams","CardsFactory",function($scope,$stateParams,CardsFactory){function getSearchResults(searchTerm){CardsFactory.getDailyMedRecords(searchTerm).success(function(dailyMedRecords){for(var processedRecords=[],i=0;i<dailyMedRecords.results.length;i++)dailyMedRecords.results[i].openfda.spl_set_id&&processedRecords.push(dailyMedRecords.results[i]);for(var totalRecords=processedRecords.length,remainder=totalRecords%3,columnSize=(totalRecords-remainder)/3,columns=[{collection:[],size:remainder>0?columnSize+1:columnSize},{collection:[],size:remainder>1?columnSize+1:columnSize},{collection:[],size:columnSize}],columnIndex=0,currentSize=0,fullTitle="",fullDescription="",i=0;i<processedRecords.length;i++)fullTitle="",fullDescription="",processedRecords[i].openfda.brand_name&&(fullTitle=processedRecords[i].openfda.brand_name.toString()+" "),processedRecords[i].openfda.generic_name&&processedRecords[i].openfda.generic_name.toString().toLowerCase()!=processedRecords[i].openfda.brand_name.toString().toLowerCase()&&(fullTitle+="("+processedRecords[i].openfda.generic_name+") "),processedRecords[i].openfda.manufacturer_name&&(fullTitle+="["+processedRecords[i].openfda.manufacturer_name.toString()+"]"),processedRecords[i].indications_and_usage&&"INDICATIONS AND USAGE:"!=processedRecords[i].indications_and_usage.toString().toLowerCase()&&(fullDescription=processedRecords[i].indications_and_usage.toString()),0==fullDescription.length&&processedRecords[i].description&&(fullDescription=processedRecords[i].description.toString()),columns[columnIndex].collection.push({id:processedRecords[i].openfda.spl_set_id,title:fullTitle,description:fullDescription.substring(0,300)+"..."}),currentSize==columns[columnIndex].size-1?(columnIndex++,currentSize=0):currentSize++;$scope.columns=columns,console.log("success getting daily med records")}).error(function(){console.log("an error occured getting daily med records")})}$scope.doSearch=function(searchTerm){getSearchResults(searchTerm)}}]),angular.module("cards").controller("DetailedCardController",["$scope","$rootScope","$stateParams","CardsFactory",function($scope,$rootScope,$stateParams,CardsFactory){function getDetailedCard(){$(window).scrollTop(0),getSourceName();var singleRecordApiParam=$stateParams.recordId;"medlinePlusConnect"==$stateParams.sourceId&&(singleRecordApiParam=$stateParams.searchTerm),$scope.showPreLoader=!0,CardsFactory.getDetailedCardRecord($stateParams.sourceId,singleRecordApiParam).success(function(data){switch($stateParams.sourceId){case"dailyMed":fillInDailyMedCard(data.results[0]);break;case"medlinePlusConnect":fillInMedlinePlusConnectCard(data.feed.entry);break;case"medlinePlusHealthTopics":fillInMedlinePlusHealthTopicsCard(data.nlmSearchResult.list[0].document[0].content[0]["health-topic"][0]);break;case"pubMed":fillInPubMedCard(data.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0],data.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].DateCreated[0]);break;case"digitalCollections":fillInDigitalCollectionsCard(data.nlmSearchResult.list[0].document[0].content);break;case"clinicalTrials":fillInClinicalTrialsCard(data.clinical_study)}$scope.detailedRecordData=detailedRecordData,$scope.showDetailedCardContainer=!0,$scope.showPreLoader=!1,console.log("success getting a detailed record")}).error(function(){console.log("an error occured getting a detailed record")})}function getSourceName(){for(var i=0;i<$rootScope.userPreferences.sources.length;i++)$rootScope.userPreferences.sources[i].id==$stateParams.sourceId&&($scope.sourceName=$rootScope.userPreferences.sources[i].name,console.log("source name is here "+$rootScope.userPreferences.sources[i].name))}function fillInDailyMedCard(record){var fullTitle="";record.openfda.brand_name&&(fullTitle=record.openfda.brand_name.toString()+" "),record.openfda.generic_name&&record.openfda.generic_name.toString().toLowerCase()!=record.openfda.brand_name.toString().toLowerCase()&&(fullTitle+="("+record.openfda.generic_name+") "),record.openfda.manufacturer_name&&(fullTitle+="["+record.openfda.manufacturer_name.toString()+"]"),detailedRecordData=[{name:"Title",value:fullTitle,mainDisplay:!1}],record.information_for_patients&&detailedRecordData.push({name:"Information for Patients",value:record.information_for_patients,mainDisplay:!0}),record.indications_and_usage&&detailedRecordData.push({name:"Indications and Usage",value:record.indications_and_usage,mainDisplay:!0}),record.contraindications&&detailedRecordData.push({name:"Contraindications",value:record.contraindications,mainDisplay:!0}),record.how_supplied&&detailedRecordData.push({name:"How Supplied",value:record.how_supplied,mainDisplay:!0}),record.pharmacokinetics&&detailedRecordData.push({name:"Pharmacokinetics",value:record.pharmacokinetics,mainDisplay:!0}),record.dosage_and_administration&&detailedRecordData.push({name:"Dosage and Administration",value:record.dosage_and_administration,mainDisplay:!0}),record.storage_and_handling&&detailedRecordData.push({name:"Storage and Handling",value:record.storage_and_handling,mainDisplay:!0}),record.description&&detailedRecordData.push({name:"Description",value:record.description,mainDisplay:!0}),record.warnings_and_cautions&&detailedRecordData.push({name:"Warnings and Cautions",value:record.warnings_and_cautions,mainDisplay:!0}),record.pediatric_use&&detailedRecordData.push({name:"Pediatric Use",value:record.pediatric_use,mainDisplay:!0}),record.recent_major_changes&&detailedRecordData.push({name:"Recent Major Changes",value:record.recent_major_changes,mainDisplay:!0}),record.geriatric_use&&detailedRecordData.push({name:"Geriatric Use",value:record.geriatric_use,mainDisplay:!0}),record.adverse_reactions&&detailedRecordData.push({name:"Adverse Reactions",value:record.adverse_reactions,mainDisplay:!0}),record.overdosage&&detailedRecordData.push({name:"Overdosage",value:record.overdosage,mainDisplay:!0}),record.drug_interactions&&detailedRecordData.push({name:"Drug Interactions",value:record.drug_interactions,mainDisplay:!0}),record.nonclinical_toxicology&&detailedRecordData.push({name:"Nonclinical Toxicology",value:record.nonclinical_toxicology,mainDisplay:!0}),record.use_in_specific_populations&&detailedRecordData.push({name:"Use in Specific Populations",value:record.use_in_specific_populations,mainDisplay:!0}),record.use_in_specific_populations&&detailedRecordData.push({name:"Use in Specific Populations",value:record.use_in_specific_populations,mainDisplay:!0}),record.clinical_studies&&detailedRecordData.push({name:"Clinical Studies",value:record.clinical_studies,mainDisplay:!0}),detailedRecordData.push({name:"Resource URL",value:formatURL("http://dailymed.nlm.nih.gov/dailymed/lookup.cfm?setid="+$stateParams.recordId),mainDisplay:!0})}function fillInMedlinePlusConnectCard(records){for(var record,i=0;i<records.length;i++)records[i].id._value==$stateParams.recordId&&(record=records[i]);detailedRecordData=[{name:"Title",value:record.title._value,mainDisplay:!1}],record.link&&detailedRecordData.push({name:"URL",value:formatURL(record.link[0].href),mainDisplay:!0}),record.summary&&detailedRecordData.push({name:"Summary",value:record.summary._value,mainDisplay:!0})}function fillInMedlinePlusHealthTopicsCard(record){if(console.log(record),detailedRecordData=[{name:"Title",value:record.$.title,mainDisplay:!1}],record["full-summary"]&&detailedRecordData.push({name:"Summary",value:record["full-summary"][0],mainDisplay:!0}),record["also-called"]){for(var alsoCalled="",i=0;i<record["also-called"].length;i++)alsoCalled+=record["also-called"][i]+", ";alsoCalled=alsoCalled.substring(0,alsoCalled.length-2),detailedRecordData.push({name:"Also Called",value:alsoCalled,mainDisplay:!0})}if(record["primary-institute"]&&detailedRecordData.push({name:"Primary Institute",value:record["primary-institute"][0]._,mainDisplay:!0}),record.site){for(var websites="",i=0;i<record.site.length;i++)websites+='<a target="blank" href="'+record.site[i].$.url+'">'+record.site[i].$.title+"</a><br />";detailedRecordData.push({name:"Related Websites",value:websites,mainDisplay:!0})}detailedRecordData.push({name:"Resource URL",value:formatURL($stateParams.recordId),mainDisplay:!0})}function fillInPubMedCard(record,recordDate){if(console.log(record),detailedRecordData=[{name:"Title",value:record.ArticleTitle[0],mainDisplay:!1}],recordDate)try{var dateCreated=recordDate.Month[0].toString()+"/"+recordDate.Day[0].toString()+"/"+recordDate.Year[0].toString();detailedRecordData.push({name:"Date Created",value:dateCreated,mainDisplay:!0})}catch(err){}if(record.Journal)try{var pubDate=record.Journal[0].JournalIssue[0].PubDate[0].Month[0].toString()+" "+record.Journal[0].JournalIssue[0].PubDate[0].Day[0].toString()+", "+record.Journal[0].JournalIssue[0].PubDate[0].Year[0].toString();detailedRecordData.push({name:"Journal",value:record.Journal[0].Title[0]+", Volume "+record.Journal[0].JournalIssue[0].Volume[0]+" Issue "+record.Journal[0].JournalIssue[0].Issue[0]+", Published on "+pubDate,mainDisplay:!0})}catch(err){}if(record.Abstract&&detailedRecordData.push({name:"Abstract",value:record.Abstract[0].AbstractText[0]._?record.Abstract[0].AbstractText[0]._.toString():record.Abstract[0].AbstractText[0].toString(),mainDisplay:!0}),record.AuthorList&&record.AuthorList[0].Author){console.log(record.AuthorList);try{for(var authors="",i=0;i<record.AuthorList[0].Author.length;i++)authors+=record.AuthorList[0].Author[i].LastName+", "+record.AuthorList[0].Author[i].ForeName+" "+record.AuthorList[0].Author[i].Initials,record.AuthorList[0].Author[i].Affiliation&&(authors+="<br /> "+record.AuthorList[0].Author[i].Affiliation[0]),authors+="<br /><br />";detailedRecordData.push({name:"Author(s)",value:authors,mainDisplay:!0})}catch(e){}}detailedRecordData.push({name:"Resource URL",value:formatURL("http://www.ncbi.nlm.nih.gov/pubmed/"+$stateParams.recordId),mainDisplay:!0})}function fillInDigitalCollectionsCard(record){console.log(record),detailedRecordData=[{name:"Title",value:record[0]._,mainDisplay:!1}];var authors="",pubDate="",publisher="",format="",subject="",description="";try{for(var i=0;i<record.length;i++)"dc:creator"==record[i].$.name&&(authors+=record[i]._+"<br />"),"dc:date"==record[i].$.name&&(pubDate+=record[i]._+"<br />"),"dc:publisher"==record[i].$.name&&(publisher+=record[i]._+"<br />"),"dc:format"==record[i].$.name&&(format+=record[i]._+"<br />"),"dc:subject"==record[i].$.name&&(subject+=record[i]._+"<br />"),"dc:description"==record[i].$.name&&(description+=record[i]._+"<p></p>")}catch(e){}authors.length>0&&detailedRecordData.push({name:"Author(s)",value:authors,mainDisplay:!0}),pubDate.length>0&&detailedRecordData.push({name:"Publication Date",value:pubDate,mainDisplay:!0}),publisher.length>0&&detailedRecordData.push({name:"Publisher",value:publisher,mainDisplay:!0}),format.length>0&&detailedRecordData.push({name:"Format",value:format,mainDisplay:!0}),subject.length>0&&detailedRecordData.push({name:"Subject(s)",value:subject,mainDisplay:!0}),description.length>0&&detailedRecordData.push({name:"Description)",value:description,mainDisplay:!0}),detailedRecordData.push({name:"Resource URL",value:formatURL($stateParams.recordId),mainDisplay:!0})}function fillInClinicalTrialsCard(record){if(console.log(record),detailedRecordData=[{name:"Title",value:record.brief_title[0],mainDisplay:!1}],record.official_title&&detailedRecordData.push({name:"Official Title",value:record.official_title[0],mainDisplay:!0}),record.overall_status&&detailedRecordData.push({name:"Status",value:record.overall_status[0],mainDisplay:!0}),record.condition&&detailedRecordData.push({name:"Condition",value:record.condition[0],mainDisplay:!0}),record.sponsors)try{var sponsors="";if(record.sponsors[0].lead_sponsor&&(sponsors+=record.sponsors[0].lead_sponsor[0].agency[0]+"<br />"),record.sponsors[0].collaborator)for(var i=0;i<record.sponsors[0].collaborator.length;i++)sponsors+=record.sponsors[0].collaborator[i].agency[0]+"<br />";detailedRecordData.push({name:"Sponsor(s)",value:sponsors,mainDisplay:!0})}catch(e){}record.firstreceived_date&&detailedRecordData.push({name:"First Received Date",value:record.firstreceived_date[0],mainDisplay:!0}),record.lastchanged_date&&detailedRecordData.push({name:"Last Updated Date",value:record.lastchanged_date[0],mainDisplay:!0}),record.start_date&&detailedRecordData.push({name:"Start Date",value:record.start_date[0],mainDisplay:!0}),record.primary_completion_date&&detailedRecordData.push({name:"Primary Completion Date",value:record.primary_completion_date[0]._,mainDisplay:!0}),record.brief_summary&&detailedRecordData.push({name:"Brief Summary",value:record.brief_summary[0].textblock[0],mainDisplay:!0}),record.detailed_description&&detailedRecordData.push({name:"Detailed Description",value:record.detailed_description[0].textblock[0],mainDisplay:!0}),record.eligibility&&record.eligibility[0].criteria&&detailedRecordData.push({name:"Eligibility Criteria",value:record.eligibility[0].criteria[0].textblock[0],mainDisplay:!0}),detailedRecordData.push({name:"Resource URL",value:formatURL("http://clinicaltrials.gov/ct2/show/"+$stateParams.recordId),mainDisplay:!0})}function formatURL(url){return'<a class="field_link" target="_blank" href='+url+">"+url+"</a>"}var detailedRecordData=[];getDetailedCard()}]),angular.module("cards").controller("DigitalCardsController",["$scope","$stateParams","CardsFactory",function($scope,$stateParams,CardsFactory){function getSearchResults(searchTerm){CardsFactory.getDigitalCollectionRecords(searchTerm).success(function(digitalRecords){for(var totalRecords=digitalRecords.nlmSearchResult.list[0].document.length,remainder=totalRecords%3,columnSize=(totalRecords-remainder)/3,columns=[{collection:[],size:remainder>0?columnSize+1:columnSize},{collection:[],size:remainder>1?columnSize+1:columnSize},{collection:[],size:columnSize}],columnIndex=0,currentSize=0,i=0;i<digitalRecords.nlmSearchResult.list[0].document.length;i++){for(var snippet="",j=0;j<digitalRecords.nlmSearchResult.list[0].document[i].content.length;j++)"dc:description"==digitalRecords.nlmSearchResult.list[0].document[i].content[j].$.name?snippet=digitalRecords.nlmSearchResult.list[0].document[i].content[j]._:"snippet"==digitalRecords.nlmSearchResult.list[0].document[i].content[j].$.name&&(snippet=digitalRecords.nlmSearchResult.list[0].document[i].content[j]._);columns[columnIndex].collection.push({title:removeHTMLTags(digitalRecords.nlmSearchResult.list[0].document[i].content[0]._),description:removeHTMLTags(snippet)}),currentSize==columns[columnIndex].size-1?(columnIndex++,currentSize=0):currentSize++}$scope.columns=columns,console.log("success getting digital collection records")}).error(function(){console.log("an error occured getting digital collection")})}function removeHTMLTags(s){var rex=/(<([^>]+)>)/gi;return s.replace(rex,"")}$scope.doSearch=function(searchTerm){getSearchResults(searchTerm)}}]),angular.module("cards").controller("MedPlusCardsController",["$scope","$stateParams","CardsFactory",function($scope,$stateParams,CardsFactory){function getSearchResults(searchTerm){CardsFactory.getMedPlusRecords(searchTerm).success(function(digitalRecords){for(var totalRecords=digitalRecords.nlmSearchResult.list[0].document.length,remainder=totalRecords%3,columnSize=(totalRecords-remainder)/3,columns=[{collection:[],size:remainder>0?columnSize+1:columnSize},{collection:[],size:remainder>1?columnSize+1:columnSize},{collection:[],size:columnSize}],columnIndex=0,currentSize=0,i=0;i<digitalRecords.nlmSearchResult.list[0].document.length;i++){for(var snippet="",j=0;j<digitalRecords.nlmSearchResult.list[0].document[i].content.length;j++)"FullSummary"==digitalRecords.nlmSearchResult.list[0].document[i].content[j].$.name&&(snippet=digitalRecords.nlmSearchResult.list[0].document[i].content[j]._);columns[columnIndex].collection.push({title:removeHTMLTags(digitalRecords.nlmSearchResult.list[0].document[i].content[0]._),description:removeHTMLTags(snippet)}),currentSize==columns[columnIndex].size-1?(columnIndex++,currentSize=0):currentSize++
}$scope.columns=columns,console.log("success getting digital collection records")}).error(function(){console.log("an error occured getting digital collection")})}function removeHTMLTags(s){var rex=/(<([^>]+)>)/gi;return s.replace(rex,"")}$scope.doSearch=function(searchTerm){getSearchResults(searchTerm)}}]),angular.module("cards").controller("MedPlusConnectCardsController",["$scope","$stateParams","CardsFactory",function($scope,$stateParams,CardsFactory){function getSearchResults(searchTerm){CardsFactory.getMedPlusConnectRecords(searchTerm).success(function(records){for(var totalRecords=records.feed.entry.length,remainder=totalRecords%3,columnSize=(totalRecords-remainder)/3,columns=[{collection:[],size:remainder>0?columnSize+1:columnSize},{collection:[],size:remainder>1?columnSize+1:columnSize},{collection:[],size:columnSize}],columnIndex=0,currentSize=0,i=0;i<records.feed.entry.length;i++)columns[columnIndex].collection.push({title:removeHTMLTags(records.feed.entry[i].title._value),description:removeHTMLTags(records.feed.entry[i].summary._value)}),currentSize==columns[columnIndex].size-1?(columnIndex++,currentSize=0):currentSize++;$scope.columns=columns,console.log("success getting records")}).error(function(){console.log("an error occured getting digital collection")})}function removeHTMLTags(s){var rex=/(<([^>]+)>)/gi;return s.replace(rex,"")}$scope.doSearch=function(searchTerm){getSearchResults(searchTerm)}}]),angular.module("cards").controller("PubmedCardsController",["$scope","$stateParams","CardsFactory",function($scope,$stateParams,CardsFactory){function getSearchResults(searchTerm){CardsFactory.getPubmedRecords(searchTerm).success(function(records){for(var idList=records.eSearchResult.IdList[0].Id,totalRecords=idList.length,remainder=totalRecords%3,columnSize=(totalRecords-remainder)/3,columns=[{collection:[],size:remainder>0?columnSize+1:columnSize},{collection:[],size:remainder>1?columnSize+1:columnSize},{collection:[],size:columnSize}],columnIndex=0,currentSize=0,i=0;i<idList.length;i++){var id=idList[i].toString();columns[columnIndex].collection.push({id:id}),getPubmedDetails(id,columns[columnIndex].collection[columns[columnIndex].collection.length-1]),currentSize==columns[columnIndex].size-1?(columnIndex++,currentSize=0):currentSize++}$scope.columns=columns}).error(function(){console.log("an error occured getting daily med records")})}function getPubmedDetails(id,collectionItem){CardsFactory.getPubmedRecord(id).success(function(record){console.log(id);var articleTitle=record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].ArticleTitle[0].toString(),abstract=record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].Abstract?record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].Article[0].Abstract[0].AbstractText[0]._.toString():"",dateArray=record.PubmedArticleSet.PubmedArticle[0].MedlineCitation[0].DateCreated[0],dateCreated=dateArray.Month[0].toString()+"/"+dateArray.Day[0].toString()+"/"+dateArray.Year[0].toString();collectionItem.title=articleTitle,collectionItem.abstract=abstract,collectionItem.dateCreated=dateCreated}).error(function(){console.log("an error occured getting a single daily med record")})}$scope.doSearch=function(searchTerm){getSearchResults(searchTerm)}}]),angular.module("cards").controller("TrialsCardsController",["$scope","$stateParams","CardsFactory",function($scope,$stateParams,CardsFactory){function getSearchResults(searchTerm){CardsFactory.getTrialRecords(searchTerm).success(function(records){for(var totalRecords=records.search_results.clinical_study.length,remainder=totalRecords%3,columnSize=(totalRecords-remainder)/3,columns=[{collection:[],size:remainder>0?columnSize+1:columnSize},{collection:[],size:remainder>1?columnSize+1:columnSize},{collection:[],size:columnSize}],columnIndex=0,currentSize=0,i=0;i<records.search_results.clinical_study.length;i++)console.log(records.search_results.clinical_study[i].title[0].toString()),columns[columnIndex].collection.push({title:removeHTMLTags(records.search_results.clinical_study[i].title[0].toString()),description:removeHTMLTags(records.search_results.clinical_study[i].condition_summary[0].toString()),status:records.search_results.clinical_study[i].status[0]._}),currentSize==columns[columnIndex].size-1?(columnIndex++,currentSize=0):currentSize++;$scope.columns=columns,console.log("success getting records")}).error(function(){console.log("an error occured getting digital collection")})}function removeHTMLTags(s){var rex=/(<([^>]+)>)/gi;return s.replace(rex,"")}$scope.doSearch=function(searchTerm){getSearchResults(searchTerm)}}]),angular.module("cards").factory("CardsFactory",["$http","$resource",function($http){var factory={};return factory.getCardRecords=function(sourceId,sourceName,searchTerm,currentPage){return $http.get("proxy?sourceId="+sourceId+"&currentPage="+currentPage+"&searchTerm="+searchTerm,{data:{sourceId:sourceId,sourceName:sourceName,searchTerm:searchTerm},cache:!0,timeout:2e4})},factory.getDetailedCardRecord=function(sourceId,recordId){return $http.get("proxy?sourceId="+sourceId+"&recordId="+recordId,{cache:!0})},factory}]),angular.module("core",["users"]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/cards")}]),angular.module("core").controller("HeaderController",["$scope","$rootScope","$location","Authentication","Menus","UserPreferences",function($scope,$rootScope,$location,Authentication,Menus,UserPreferences){function changeHeaderName(){switch($location.path()){case"/cards/pubmed/":$scope.currentAPI="- Cards for Pubmed";break;case"/cards/trials/":$scope.currentAPI="- Cards for Clinical Trials";break;case"/cards/medplus/":$scope.currentAPI="- Cards for MedlinePlus";break;case"/cards/medplusconnect/":$scope.currentAPI="- Cards for MedlinePlus Connect";break;case"/cards/digital/":$scope.currentAPI="- Cards for Digital Collections";break;case"/cards/daily/":$scope.currentAPI="- Cards for DailyMed";break;default:$scope.currentAPI=""}}function getUserPreferences(){$rootScope.userPreferences=UserPreferences.getUserPreferences()}$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1,changeHeaderName()}),getUserPreferences()}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("preferences",{url:"/preferences",templateUrl:"modules/users/views/preferences.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("cards").controller("PreferencesController",["$scope","$rootScope","$stateParams","$location","CardsFactory","UserPreferences",function($scope,$rootScope,$stateParams,$location,CardsFactory,UserPreferences){function init(){$rootScope.userPreferences||($rootScope.userPreferences=UserPreferences.getUserPreferences()),$scope.sources=$rootScope.userPreferences.sources,$scope.searchTerms=$rootScope.userPreferences.searchTerms}init(),$scope.changeSources=function(sourceId,chosen){for(var i=0;i<$scope.sources.length;i++)$scope.sources[i].id==sourceId&&($scope.sources[i].chosen=chosen)},$scope.deleteSearchTerm=function(index){$scope.searchTerms.splice(index,1)},$scope.addSearchTerm=function(term){var dup=!1;$scope.searchTermToAdd="";for(var i=0;i<$scope.searchTerms.length;i++)if($scope.searchTerms[i]==term){dup=!0;break}return dup?!1:($scope.searchTerms.push(term),void($scope.searchTermToAdd=""))},$scope.savePreferences=function(){$rootScope.userPreferences.sources=$scope.sources,$rootScope.columns=void 0,$location.url("/cards")}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("users").factory("UserPreferences",[function(){var factory={};return factory.getUserPreferences=function(){var userPreferences={sources:[{id:"dailyMed",name:"DailyMed",chosen:!1},{id:"medlinePlusConnect",name:"MedlinePlus Connect",chosen:!0},{id:"medlinePlusHealthTopics",name:"MedlinePlus Health Topics",chosen:!1},{id:"pubMed",name:"PubMed",chosen:!0},{id:"digitalCollections",name:"Digital Collections",chosen:!0},{id:"clinicalTrials",name:"ClinicalTrials.gov",chosen:!0}],searchTerms:["a00","q90","cancer","hiv"]};return userPreferences},factory}]);